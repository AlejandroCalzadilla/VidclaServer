package org.mailgrupo13.vidcla.seeders;

import org.mailgrupo13.vidcla.Inventario.parabrisa.entities.Parabrisa;
import org.mailgrupo13.vidcla.Inventario.parabrisa.entities.PosicionP;
import org.mailgrupo13.vidcla.Inventario.parabrisa.entities.CategoriaP;
import org.mailgrupo13.vidcla.Inventario.vehiculo.entities.Vehiculo;
import org.mailgrupo13.vidcla.Inventario.parabrisa.repositories.ParabrisaRepository;
import org.mailgrupo13.vidcla.Inventario.parabrisa.repositories.PosicionPRepository;
import org.mailgrupo13.vidcla.Inventario.parabrisa.repositories.CategoriaPRepository;
import org.mailgrupo13.vidcla.Inventario.vehiculo.repositories.VehiculoRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.math.BigDecimal;
import java.util.List;
import java.util.Random;

@Service
public class ParabrisaSeeder {

    @Autowired
    private ParabrisaRepository parabrisaRepository;

    @Autowired
    private VehiculoRepository vehiculoRepository;

    @Autowired
    private PosicionPRepository posicionPRepository;

    @Autowired
    private CategoriaPRepository categoriaPRepository;

    public void seedParabrisas() {
        List<Vehiculo> vehiculos = vehiculoRepository.findAll();
        List<PosicionP> posiciones = posicionPRepository.findAll();
        List<CategoriaP> categorias = categoriaPRepository.findAll();
        Random random = new Random();

        for (Vehiculo vehiculo : vehiculos) {
            for (PosicionP posicion : posiciones) {
                for (CategoriaP categoria : categorias) {
                    Parabrisa parabrisa = new Parabrisa();
                    parabrisa.setVehiculo(vehiculo);
                    parabrisa.setPosicion(posicion);
                    parabrisa.setCategoria(categoria);
                    parabrisa.setArriba(random.nextFloat() * (300 - 20) + 20);
                    parabrisa.setAbajo(random.nextFloat() * (300 - 20) + 20);
                    parabrisa.setCostado(random.nextFloat() * (300 - 20) + 20);
                    parabrisa.setMedio(random.nextFloat() * (300 - 20) + 20);
                    parabrisa.setObservacion("Generated by seeder");

                    if ("T".equalsIgnoreCase(posicion.getCodigo()) || "P".equalsIgnoreCase(posicion.getCodigo())) {
                        parabrisa.setPrecio(BigDecimal.valueOf(random.nextInt(101) + 400));
                    } else {
                        parabrisa.setPrecio(BigDecimal.valueOf(random.nextInt(201) + 100));
                    }

                    parabrisaRepository.save(parabrisa);
                }
            }
        }
    }
}